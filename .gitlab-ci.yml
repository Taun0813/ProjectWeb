stages:
  - build
  - docker_build
  - push
  - deploy

variables:
  IMAGE_TAG: $CI_COMMIT_SHORT_SHA
  DOCKER_REPO: thaituan130803

# ===================== BUILD =====================

build_user:
  stage: build
  script:
    - cd user-service
    - mvn package -DskipTests
  artifacts:
    paths:
      - user-service/target/*.jar
  only:
    changes:
      - user-service/**

build_product:
  stage: build
  script:
    - cd product-service
    - mvn package -DskipTests
  artifacts:
    paths:
      - product-service/target/*.jar
  only:
    changes:
      - product-service/**

build_order:
  stage: build
  script:
    - cd order-service
    - mvn package -DskipTests
  artifacts:
    paths:
      - order-service/target/*.jar
  only:
    changes:
      - order-service/**

build_notification:
  stage: build
  script:
    - cd notification-service
    - mvn package -DskipTests
  artifacts:
    paths:
      - notification-service/target/*.jar
  only:
    changes:
      - notification-service/**

build_api_gateway:
  stage: build
  script:
    - cd api-gateway
    - mvn package -DskipTests
  artifacts:
    paths:
      - api-gateway/target/*.jar
  only:
    changes:
      - api-gateway/**

build_eureka:
  stage: build
  script:
    - cd eureka-server
    - mvn package -DskipTests
  artifacts:
    paths:
      - eureka-server/target/*.jar
  only:
    changes:
      - eureka-server/**

build_payment:
  stage: build
  script:
    - cd payment-service
    - mvn package -DskipTests
  artifacts:
    paths:
      - payment-service/target/*.jar
  only:
    changes:
      - payment-service/**

# ===================== DOCKER BUILD =====================

docker_user:
  stage: docker_build
  script:
    - docker build -t $DOCKER_REPO/user-service:$IMAGE_TAG ./user-service
  needs: [build_user]
  only:
    changes:
      - user-service/**

docker_product:
  stage: docker_build
  script:
    - docker build -t $DOCKER_REPO/product-service:$IMAGE_TAG ./product-service
  needs: [build_product]
  only:
    changes:
      - product-service/**

docker_order:
  stage: docker_build
  script:
    - docker build -t $DOCKER_REPO/order-service:$IMAGE_TAG ./order-service
  needs: [build_order]
  only:
    changes:
      - order-service/**

docker_notification:
  stage: docker_build
  script:
    - docker build -t $DOCKER_REPO/notification-service:$IMAGE_TAG ./notification-service
  needs: [build_notification]
  only:
    changes:
      - notification-service/**

docker_api_gateway:
  stage: docker_build
  script:
    - docker build -t $DOCKER_REPO/api-gateway:$IMAGE_TAG ./api-gateway
  needs: [build_api_gateway]
  only:
    changes:
      - api-gateway/**

docker_eureka:
  stage: docker_build
  script:
    - docker build -t $DOCKER_REPO/eureka-server:$IMAGE_TAG ./eureka-server
  needs: [build_eureka]
  only:
    changes:
      - eureka-server/**

docker_payment:
  stage: docker_build
  script:
    - docker build -t $DOCKER_REPO/payment-service:$IMAGE_TAG ./payment-service
  needs: [build_payment]
  only:
    changes:
      - payment-service/**

# ===================== PUSH =====================

push_images:
  stage: push
  script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - |
      for SERVICE in user-service product-service order-service notification-service api-gateway eureka-server payment-service; do
        docker push $DOCKER_REPO/$SERVICE:$IMAGE_TAG || echo "Skip push: $SERVICE"
      done
  needs:
    - docker_user
    - docker_product
    - docker_order
    - docker_notification
    - docker_api_gateway
    - docker_eureka
    - docker_payment
  only:
    - main

# ===================== DEPLOY =====================

.deploy_template: &deploy_template
  stage: deploy
  image: bitnami/kubectl:latest
  before_script:
    - kubectl config set-cluster k8s --server=$K8S_SERVER --certificate-authority=$K8S_CA
    - kubectl config set-credentials gitlab --token=$K8S_TOKEN
    - kubectl config set-context default --cluster=k8s --user=gitlab --namespace=default
    - kubectl config use-context default
  only:
    - main
  needs: [push_images]

deploy_user:
  <<: *deploy_template
  script:
    - kubectl set image deployment/user-deployment deployment-container=$DOCKER_REPO/user-service:$IMAGE_TAG

deploy_product:
  <<: *deploy_template
  script:
    - kubectl set image deployment/product-deployment deployment-container=$DOCKER_REPO/product-service:$IMAGE_TAG

deploy_order:
  <<: *deploy_template
  script:
    - kubectl set image deployment/order-deployment deployment-container=$DOCKER_REPO/order-service:$IMAGE_TAG

deploy_notification:
  <<: *deploy_template
  script:
    - kubectl set image deployment/notification-deployment deployment-container=$DOCKER_REPO/notification-service:$IMAGE_TAG

deploy_api_gateway:
  <<: *deploy_template
  script:
    - kubectl set image deployment/api-gateway-deployment deployment-container=$DOCKER_REPO/api-gateway:$IMAGE_TAG

deploy_eureka:
  <<: *deploy_template
  script:
    - kubectl set image deployment/eureka-deployment deployment-container=$DOCKER_REPO/eureka-server:$IMAGE_TAG

deploy_payment:
  <<: *deploy_template
  script:
    - kubectl set image deployment/payment-deployment deployment-container=$DOCKER_REPO/payment-service:$IMAGE_TAG
