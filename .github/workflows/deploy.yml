name: CI/CD for Changed Services

on:
  push:
    branches:
      - BE
    paths:
      - 'BE/**'

env:
  REGISTRY: docker.io
  IMAGE_OWNER: ${{ secrets.DOCKER_USERNAME }}

jobs:
#  detect-and-deploy:
#    runs-on: ubuntu-latest
#    outputs:
#      services: ${{ steps.detect.outputs.services }}
#
#    steps:
#      - name: Checkout source code
#        uses: actions/checkout@v3
#
#      - name: Detect changed services
#        id: detect
#        run: |
#          echo "services=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | \
#            grep '^BE/' | cut -d '/' -f2 | sort -u | jq -R -s -c 'split("\n") | map(select(. != ""))')" >> $GITHUB_OUTPUT
#          echo "Git diff output: $(git diff --name-only ${{ github.event.before }} ${{ github.sha }})"
#
#
#  build-and-deploy:
#    needs: detect-and-deploy
#    if: needs.detect-and-deploy.outputs.services != '[]'
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        service: ${{ fromJson(needs.detect-and-deploy.outputs.services) }}
#
#    steps:
#      - name: Checkout source code
#        uses: actions/checkout@v3
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Build JAR file
#        run: |
#          cd BE/${{ matrix.service }}
#          ./mvnw clean package -DskipTests
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Build and push Docker image
#        run: |
#          docker build -t $REGISTRY/$IMAGE_OWNER/${{ matrix.service }}:latest BE/${{ matrix.service }}
#          docker push $REGISTRY/$IMAGE_OWNER/${{ matrix.service }}:latest
#
#      - name: Set up Kubeconfig
#        run: |
#          mkdir -p $HOME/.kube
#          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config
#
#      - name: Update deployment image
#        run: |
#          kubectl set image deployment/${{ matrix.service }} ${{ matrix.service }}=$REGISTRY/$IMAGE_OWNER/${{ matrix.service }}:latest
  detect-and-deploy:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.detect.outputs.services }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Git for diff
        run: |
          git fetch --no-tags --prune --depth=2 origin ${{ github.event.before }}

      - name: Detect changed services
        id: detect
        run: |
          changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          echo "Changed files:"
          echo "$changed_files"

          changed_services=$(echo "$changed_files" | grep '^BE/' | cut -d '/' -f2 | sort -u | jq -R -s -c 'split("\n") | map(select(. != ""))')

          echo "Detected services: $changed_services"
          echo "services=$changed_services" >> $GITHUB_OUTPUT

  build-and-deploy:
    needs: detect-and-deploy
    if: needs.detect-and-deploy.outputs.services != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.detect-and-deploy.outputs.services) }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build JAR file
        run: |
          cd BE/${{ matrix.service }}
          ./mvnw clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t $REGISTRY/$IMAGE_OWNER/${{ matrix.service }}:latest BE/${{ matrix.service }}
          docker push $REGISTRY/$IMAGE_OWNER/${{ matrix.service }}:latest

      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

      - name: Update deployment image
        run: |
          kubectl set image deployment/${{ matrix.service }} ${{ matrix.service }}=$REGISTRY/$IMAGE_OWNER/${{ matrix.service }}:latest